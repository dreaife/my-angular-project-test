name: Deploy to GitHub Pages and Create Release

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.spec.ts'
      - '**/*.test.ts'
      - 'jest.config.js'
      - 'setup-jest.ts'

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Generate environment.ts
        run: |
          mkdir -p src/app/environment
          echo "export const environment = {
            production: true,
            cognito: {
              userPoolId: '${{ secrets.COGNITO_USER_POOL_ID }}',
              clientId: '${{ secrets.COGNITO_CLIENT_ID }}',
              domain: '${{ secrets.COGNITO_DOMAIN }}'
            },
            bgm: {
              url: 'https://api.bgm.tv/v0',
              authToken: '$BGM_AUTH_TOKEN',
              userAgent: 'dreaife/my-angular-project-test'
            }
          };" > src/app/environment/environment.ts

          ls src/app/environment


      - name: Run tests
        run: npm test
        
      - name: Build project
        run: npm run build -- --configuration production --base-href "/my-angular-project-test/"

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist/my-angular-project/browser
          token: ${{ secrets.TOKEN }}

      # 创建 ZIP 文件
      - name: Create ZIP archive
        run: |
          cd dist/my-angular-project/browser
          zip -r ../../../release.zip .
          cd ../../..

      # 获取当前时间作为版本号
      - name: Get current time
        id: current-time
        run: echo "time=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT

      # 创建 Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: v${{ steps.current-time.outputs.time }}
          release_name: Release ${{ steps.current-time.outputs.time }}
          body: |
            Release created at ${{ steps.current-time.outputs.time }}
            
            Changes in this release:
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      # 上传构建产物到 Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release-${{ steps.current-time.outputs.time }}.zip
          asset_content_type: application/zip

      # 可选：上传源代码
      - name: Create Source Code Archive
        run: |
          git archive --format=zip HEAD -o source-code.zip

      - name: Upload Source Code
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./source-code.zip
          asset_name: source-code-${{ steps.current-time.outputs.time }}.zip
          asset_content_type: application/zip

env:
  COGNITO_USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID }}
  COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
  COGNITO_DOMAIN: ${{ secrets.COGNITO_DOMAIN }}
  BGM_AUTH_TOKEN: ${{ secrets.BGM_AUTH_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.TOKEN }}
  